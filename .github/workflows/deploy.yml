name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build, Test, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run tests
        run: go test ./...

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: docker build -t inventory-api:${{ github.sha }} .

      - name: Tag Docker image
        run: docker tag inventory-api:${{ github.sha }} ${{ steps.login-ecr.outputs.registry }}/inventory-api:${{ github.sha }}

      - name: Push Docker image to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/inventory-api:${{ github.sha }}

      - name: Deploy to ECS using CloudFormation
        run: |
          aws cloudformation deploy \
            --template-file cloudformation/ecs-stack.yaml \
            --stack-name inventory-api-stack \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              ImageUrl=${{ steps.login-ecr.outputs.registry }}/inventory-api:${{ github.sha }}
